/**

\page tutorial-planar-object-pose Tutorial: Planar object pose estimation.
\tableofcontents

\section tutorial-planar-object-pose-intro Introduction

\note The source code is available at tutorial-planar-object-pose.cpp:

This tutorial shows a way to estimate planar object pose (**cMo**) from a RGB-D camera and the object 3D model.
\image html img-d435-box-pose-estimation.png
Here:
- The origin of the object frame is located at the top left corner of the D435 box.
- The blue lines represent the box boundary.
- The orange crosses represent some keypoints which are described into the 3D model file.

In this tutorial, an Intel D435 was used to capture the data. Furthermore, tho object is described by the following model file:
\verbatim
# Bounds
# - Contains a list of 3D points (X Y Z) corresponding to the bounds of the plane to consider
Bounds
data:
  - [0,          0, 0]    # pt 0: top left point
  - [0,      0.143, 0]    # pt 1: top right point
  - [0.091,  0.143, 0]
  - [0.091,      0, 0]

# Keypoints
# - Contains a list of 3D points (X Y Z) corresponding to the keypoints
# - These points are defined in origin frame and represent the white sticker corners
Keypoints
data:
  - [0.008, 0.086, 0]
  - [0.008, 0.130, 0]
  - [0.033, 0.130, 0]
  - [0.033, 0.086, 0]
\endverbatim

Those data are loaded such as:
\snippet tutorial-planar-object-pose.cpp Prior_Data
\note This example works with color-aligned depth or not aligned depth.

Finally, in order to compute the object pose, we'll need
- The object plane defined into the color frame **[1]**
- Some color image point [pixel] matched with 3D model point [meter] **[2]**

\section tutorial-planar-object-pose-plane-estimation Depth-based plane estimation [1]

The first step is to estimate the object plane thanks to the depth data. In this tutorial, the user has to delimitate this area such as:
\image html img-d435-box-plane-roi-definition.png

Then, based on the user selected points, a convex hull is created and projected to the depth frame.
\snippet tutorial-planar-object-pose.cpp Roi_Plane_Estimation

Once, the plane ROI is defined on the depth frame, the plane is estimated. Firstly in the depth frame. Then, the depth-frame-located plane is projected to the color frame.
\image html img-d435-box-plane-estimation.png
\snippet tutorial-planar-object-pose.cpp Plane_Estimation

\section tutorial-planar-object-pose-matching Image point and Model point matching [2]

\image html img-d435-box-keypoint-selection.png

Here, the user is simulated an automatic corner detection and the detection/model matching.

\section tutorial-planar-object-pose-pose-estimation Pose estimation

\image html img-d435-box-pose-estimation.png

Finally, the object pose (i.e., the relation ship between the object and the color optical frame) is computed thanks to:
\snippet tutorial-planar-object-pose.cpp Pose_Estimation

*/
